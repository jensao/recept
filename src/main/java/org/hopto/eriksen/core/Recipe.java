package org.hopto.eriksen.core;

// Generated 2015-okt-07 12:38:00 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderColumn;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Recipe generated by hbm2java
 */
@Entity
@Table(name = "recipe", catalog = "recept")
public class Recipe implements java.io.Serializable {

	private Integer recipeId;
	private Course course;
	private String name;
	
	@JsonProperty("instructions")
	private List<RecipeInstruction> recipeInstructions = new ArrayList<RecipeInstruction>(
			0);
	private Set<RecipeHasIngredient> recipeHasIngredients = new HashSet<RecipeHasIngredient>(
			0);

	public Recipe() {
	}

	public Recipe(Course course) {
		this.course = course;
	}

	public Recipe(Course course, String name,
			List<RecipeInstruction> recipeInstructions,
			Set<RecipeHasIngredient> recipeHasIngredients) {
		this.course = course;
		this.name = name;
		this.recipeInstructions = recipeInstructions;
		this.recipeHasIngredients = recipeHasIngredients;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "recipe_id", unique = true, nullable = false)
	public Integer getRecipeId() {
		return this.recipeId;
	}

	public void setRecipeId(Integer recipeId) {
		this.recipeId = recipeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_id", nullable = false)
	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	@Column(name = "name", length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "recipe")
	@OrderColumn(name="order")
	public List<RecipeInstruction> getRecipeInstructions() {
		return this.recipeInstructions;
	}

	public void setRecipeInstructions(List<RecipeInstruction> recipeInstructions) {
		this.recipeInstructions = recipeInstructions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "recipe")
	public Set<RecipeHasIngredient> getRecipeHasIngredients() {
		return this.recipeHasIngredients;
	}

	public void setRecipeHasIngredients(
			Set<RecipeHasIngredient> recipeHasIngredients) {
		this.recipeHasIngredients = recipeHasIngredients;
	}

}
