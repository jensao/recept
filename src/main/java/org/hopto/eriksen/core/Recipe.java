package org.hopto.eriksen.core;

// Generated 2015-okt-07 12:38:00 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderColumn;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Recipe generated by hbm2java
 */
@Entity
@Table(name = "recipe")
public class Recipe implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Integer recipeId;
	private Course course;
	private String name;
	
	@JsonProperty("instructions")
	private List<RecipeInstruction> recipeInstructions = new ArrayList<RecipeInstruction>(0);
	private Set<RecipeHasIngredient> recipeHasIngredients = new HashSet<RecipeHasIngredient>(0);

	public Recipe() {
	}

	public Recipe(Course course) {
		this.course = course;
	}

	public Recipe(Course course, String name,
			List<RecipeInstruction> recipeInstructions,
			Set<RecipeHasIngredient> recipeHasIngredients) {
		this.course = course;
		this.name = name;
		this.recipeInstructions = recipeInstructions;
		this.recipeHasIngredients = recipeHasIngredients;
	}

	@JsonIgnore
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "recipe_id", unique = true, nullable = false)
	public Integer getRecipeId() {
		return this.recipeId;
	}

	public void setRecipeId(Integer recipeId) {
		this.recipeId = recipeId;
	}

	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_id", nullable = false)
	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	@Column(name = "name", length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "recipe", cascade = CascadeType.ALL, orphanRemoval=true )
	@OrderColumn(name="instruction_order")
	public List<RecipeInstruction> getRecipeInstructions() {
		return this.recipeInstructions;
	}

	public void setRecipeInstructions(List<RecipeInstruction> recipeInstructions) {
		this.recipeInstructions = recipeInstructions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "recipe")
	public Set<RecipeHasIngredient> getRecipeHasIngredients() {
		return this.recipeHasIngredients;
	}

	public void setRecipeHasIngredients(
			Set<RecipeHasIngredient> recipeHasIngredients) {
		this.recipeHasIngredients = recipeHasIngredients;
	}

	// ------------------------ DONT MAKE MODIFICATIONS ABOVE THIS LINE FOR EASIER AUTO REENGINEERING ------------------------ //
	
	public void addInstruction(String instruction) {
		// TODO Check that the instruction doesn't exist already?
		RecipeInstruction recipeInstruction = new RecipeInstruction(instruction);
		this.recipeInstructions.add(recipeInstruction);
		recipeInstruction.setRecipe(this);
	}

	/**
	 * Equals only if the name is the same
	 */
	public boolean equals(Object other) {
		if (this == other) return true;
		if ( !(other instanceof Recipe) ) return false;
		
		Recipe recipe = (Recipe) other;
		if ( ! getName().equals(recipe.getName() ) ) return false;

		return true;
	}
	
	public int hashCode() {
		return getName().hashCode();
	}
	
	@Override
	public String toString() {
		return "Recipe ["
				+ (recipeId != null ? "recipeId=" + recipeId + ", " : "")
				+ (name != null ? "name=" + name + ", " : "")
				+ (recipeInstructions != null ? "recipeInstructions="
						+ recipeInstructions + ", " : "")
//				+ (recipeHasIngredients != null ? "recipeHasIngredients="
//						+ recipeHasIngredients : "") + "]";
						;
	}
	
	
	
}
