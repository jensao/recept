package org.hopto.eriksen.core;

// Generated 2015-okt-07 12:38:00 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name = "course")
@XmlRootElement
public class Course implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Integer courseId;
	@Size(min = 3)
	private String title;
	private String comment;
	private Date lastUpdated;
	private Set<Recipe> recipes = new HashSet<Recipe>(0);

	public Course() {
	}
	
	public Course(String title, String comment) {
		this.title = title;
		this.comment = comment;
	}

	public Course(String title, String comment, Date lastUpdated,
			Set<Recipe> recipes) {
		this.title = title;
		this.comment = comment;
		this.lastUpdated = lastUpdated;
		this.recipes = recipes;
	}

	@JsonIgnore
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "course_id", unique = true, nullable = false)
	public Integer getCourseId() {
		return this.courseId;
	}

	public void setCourseId(Integer courseId) {
		this.courseId = courseId;
	}

	@Column(name = "title", length = 45)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "comment", length = 200)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", length = 19)
	@Version
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "course", cascade=CascadeType.ALL)
	public Set<Recipe> getRecipes() {
		return this.recipes;
	}

	public void setRecipes(Set<Recipe> recipes) {
		this.recipes = recipes;
	}
	
	// ---------- ABOVE IS AUTO GENERATED CODE, DON'T MODIFY IT. ADD NEW METHODS BELOW ------------------ //
	
	public void addRecipe(Recipe recipe) {
		this.recipes.add(recipe);
		recipe.setCourse(this);
	}
	
	/**
	 * Helper method that returns the recipe matching the name that this course contains   
	 * 
	 * @param name as String
	 * @return a {@link Recipe} if found, else null
	 */
	public Recipe getRecipeByName(String name) {
		
		Recipe returnRecipe = null;
		for (Iterator<Recipe> it = recipes.iterator(); it.hasNext(); ) {
			Recipe r = it.next();
			Recipe tmpRecipe = new Recipe();
			tmpRecipe.setName(name);
			if (r.equals(tmpRecipe)) {
				returnRecipe = r;
			}
		}

		return returnRecipe;
	}
	
	public boolean equals(Object other) {
		if (this == other) return true;
		if ( !(other instanceof Course) ) return false;

		final Course course = (Course) other;
		if ( !course.getTitle().equals( getTitle() )  ) return false;

		return true;
	}

	public int hashCode() {
        return getTitle().hashCode() ;
    }

	@Override
	public String toString() {
		return "Course ["
				+ (courseId != null ? "courseId=" + courseId + ", " : "")
				+ (title != null ? "title=" + title + ", " : "")
				+ (comment != null ? "comment=" + comment + ", " : "")
				+ (lastUpdated != null ? "lastUpdated=" + lastUpdated + ", "
						: "") + (recipes != null ? "recipes=" + recipes : "")
				+ "]";
	}
	
	

}
